template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  # Sample Go app in a GitRepo
  - name: go_repo
    type: GitRepo
    configuration:
      path: {{ .Values.repoPath }}
      branches:
        include: main
      gitProvider: {{ .Values.gitProvider }}

  # Build info for the published Go app
  - name: go_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.artifactory }}    

pipelines:
  - name: go_build_pipeline_example
    steps:
      # Build the Go sample app from the GitRepo. Docs at https://www.jfrog.com/confluence/display/JFROG/GoBuild
      - name: build_go
        type: GoBuild
        configuration:
          sourceLocation: .
          resolverRepo: go-virtual
          noRegistry: true
          inputResources:
            - name: go_repo
          integrations:
            - name: {{ .Values.artifactory }}
             
      # Publish the Go sample app binary to Artifactory
      - name: cicd_go_publish_binary
        type: GoPublishBinary
        configuration:
          affinityGroup: goGroup
          # forceXrayScan: true
          # failOnScan: false
          autoPublishBuildInfo: true
          inputSteps:
            - name: build_go
          targetRepository: go-local
          integrations:
            - name: myArtifactory
          outputResources:
            - name: go_buildinfo



      # # Promote Go BuildInfo
      # - name: cicd_promote_build
      #   type: PromoteBuild
      #   configuration:
      #     targetRepository: cicd-generic-scanned
      #     includeDependencies: false
      #     status: "Xray Scanned OK"
      #     comment: "Unit testing and Xray scan passed succesfully"
      #     copy: false
      #     inputResources:
      #       - name: cicd_go_backend_buildinfo_scanned
      #         trigger: true
      #     outputResources:
      #       - name: cicd_go_backend_buildinfo_promoted
      #   execution:  
      #     onStart:
      #       - echo ${res_cicd_go_backend_buildinfo_scanned_buildName} 
      #       - echo ${res_cicd_go_backend_buildinfo_scanned_buildNumber} 
      #     # onSuccess:
      #     #   - jfrog rt sp --build=${res_build_info_backapp_scanned_buildName}/${res_build_info_backapp_scanned_buildNumber} app-generic-rc-local/ "app.version=${appVersion}            
             
      # # Publish the Go sample app build info
      # - name: cicd_publish_build_info
      #   type: PublishBuildInfo
      #   configuration:
      #     affinityGroup: goGroup
      #     inputSteps:
      #       - name: cicd_go_publish_binary
      #     outputResources:
      #       - name: cicd_go_backend_buildinfo
             
      # # Publish the Go module from the GitRepo
      # - name: cicd_go_publish_module
      #   type: GoPublishModule
      #   configuration:
      #     sourceLocation: .
      #     version: v0.0.0
      #     targetRepository: cicd-go-local
      #     autoPublishBuildInfo: true
      #     integrations:
      #       - name: myArtifactory
      #     inputSteps:
      #       - name: cicd_go_build
      #     inputResources:
      #       - name: cicd_go_backend_gitrepo
      #     outputResources:
      #       - name: cicd_go_backend_buildinfo_module
